# Define function gp.data.frame<- function (table, database = "") {	    if (missing(database) || is.null(database) || nchar(database) ==         0)         obj <- gettextf("%s", table)    else obj <- gettextf("%s.%s", database, table)            query <- gettextf("SELECT * FROM %s LIMIT 1", obj) ## changed sample to limitâ€¦.    res <- (try(dbGetQuery(gpConnection, query)))    res[1,] <- names(res)    if (is.null(res)) {        res <- data.frame()        attr(res, "totalRows") <- 0        warning("Database table could not be found. Check that the table exists in the database or verify gpConnection settings.")    }    else {       query <- sprintf("SELECT COUNT(*) FROM %s", obj)       res2 <- try(dbGetQuery(gpConnection, query))       attr(res, "totalRows") <- as.numeric(res2)    }    attr(res, "class") <- c("gp.data.frame")    attr(res, "tableName") <- table        if (!is.null(database) && !missing(database) && nchar(database) >         0)         attr(res, "database") <- database    else {        res2 <- try(dbGetQuery(gpConnection, "SELECT current_database()"))        if (!is.null(attr(res2, "class")))             attr(res, "database") <- as.character(res2[[1]])    }        return(res)}# Try out functiongpConnect(host="10.110.122.107", dbname="airlines",user="gpadmin", password="changeme")gdf<- gp.data.frame("use_r.census1")	